name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths:
      - '.github/workflows/docker.yml'
      - 'docker-bake.hcl'
      - 'cann/**'
      - 'pytorch/**'
      - 'llm/**'
      - '!**/*.md'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/docker.yml'
      - 'docker-bake.hcl'
      - 'cann/**'
      - 'pytorch/**'
      - 'llm/**'
      - '!**/*.md'
  release:
    types:
      - 'published'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    outputs:
      cann-targets: ${{ steps.list-cann-target.outputs.targets }}
      pth-targets: ${{ steps.list-pth-target.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List targets
        id: list-cann-target
        uses: docker/bake-action/subaction/list-targets@v4
        with:
          target: cann

      - name: List targets
        id: list-pth-target
        uses: docker/bake-action/subaction/list-targets@v4
        with:
          target: pytorch

  cann:
    name: cann
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs:
      - prepare
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    steps:
      - name: Build and push Docker
        uses: ./.github/.actions/build-and-push-docker
        with:
          target: ${{ matrix.target }}

  pytorch:
    name: pytorch
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs:
      - cann
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.pth-targets) }}
    steps:
      - name: Build and push Docker
        uses: ./.github/.actions/build-and-push-docker
        with:
          target: ${{ matrix.target }}
