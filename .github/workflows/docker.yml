name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths:
      - '.github/workflows/docker.yml'
      - 'docker-bake.hcl'
      - 'cann/**'
      - 'pytorch/**'
      - 'llm/**'
      - '!**/*.md'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/docker.yml'
      - 'docker-bake.hcl'
      - 'cann/**'
      - 'pytorch/**'
      - 'llm/**'
      - '!**/*.md'
  release:
    types:
      - 'published'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.list-target.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List targets
        id: list-target
        uses: docker/bake-action/subaction/list-targets@v4
        with:
          target: default

  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs:
      - prepare
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    steps:
      - name: Clean up
        continue-on-error: true
        run: |
          sudo df -h
          npm cache clean --force
          yarn cache clean
          pip cache purge
          docker system prune -a -f
          rm -rf ~/.cache
          sudo rm -rf /root/.cache
          sudo rm -rf /tmp/*
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /opt/az
          sudo rm -rf /opt/microsoft
          sudo rm -rf /opt/google

      - name: Show space
        run: |
          sudo df -h

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to the GitHub Container
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to the RedHat Quay
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Extract metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5

      - name: Build and push Docker image
        id: bake
        uses: docker/bake-action@v4
        with:
          files: |
            docker-bake.hcl
          push: ${{ github.event_name != 'pull_request' }}
          targets: ${{ matrix.target }}
          provenance: false
          sbom: false
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=min
        env:
          registries: |
            [
              {
                "registry": "docker.io",
                "owner": "${{ secrets.DOCKERHUB_OWNER }}"
              },
              {
                "registry": "ghcr.io",
                "owner": "${{ github.repository_owner }}"
              },
              {
                "registry": "quay.io",
                "owner": "${{ secrets.QUAY_OWNER }}"
              }
            ]

      - name: Export metadata
        id: export
        if: ${{ steps.bake.outputs.metadata }}
        run: |
          METADATA_FILE_NAME="${{ matrix.target }}-metadata.json"
          echo "metadata_file_name=${METADATA_FILE_NAME}" >> $GITHUB_OUTPUT
          echo '${{ steps.bake.outputs.metadata }}' > /tmp/${METADATA_FILE_NAME}

      - name: Upload metadata
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.export.outputs.metadata_file_name }}
          path: /tmp/${{ steps.export.outputs.metadata_file_name }}
          if-no-files-found: error
          retention-days: 7

      - name: Show space
        if: ${{ always() }}
        run: |
          sudo df -h
          docker images
