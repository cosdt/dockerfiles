name: 'Build and push Docker images'

on:
  workflow_call:
    inputs:
      targets:
        description: "List of bake targets"
        required: true
        type: string
      set:
        description: "List of targets values to override (eg. targetpattern.key=value)"
        required: false
        type: string
      push:
        description: "Push is a shorthand for --set=*.output=type=registry"
        required: false
        type: boolean
        default: false
      clean-up:
        description: "Whether to clean up"
        required: false
        type: boolean
        default: true
      upload-metadata:
        description: "Whether to upload metadata files"
        required: false
        type: boolean
        default: true
      hw-registry:
        description: "Server address of Huawei Cloud registry"
        required: false
        type: string
        default: 'swr.cn-southwest-2.myhuaweicloud.com'
    secrets:
      DOCKERHUB_OWNER:
        description: "Owner of the DockerHub registry"
        required: false
      DOCKERHUB_USERNAME:
        description: "Username of the DockerHub registry"
        required: false
      DOCKERHUB_TOKEN:
        description: "Token of the DockerHub registry"
        required: false
      QUAY_OWNER:
        description: "Owner of the Quay registry"
        required: false
      QUAY_USERNAME:
        description: "Username of the Quay registry"
        required: false
      QUAY_TOKEN:
        description: "Token of the Quay registry"
        required: false
      HW_OWNER:
        description: "Owner of the Huawei Cloud registry"
        required: false
      HW_USERNAME:
        description: "Username of the Huawei Cloud registry"
        required: false
      HW_TOKEN:
        description: "Token of the Huawei Cloud registry"
        required: false

jobs:
  docker:
    name: 'docker'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        target: ${{ fromJson(inputs.targets) }}
    steps:
      - name: Clean up
        if: ${{ inputs.clean-up }}
        continue-on-error: true
        shell: bash
        run: |
          set -ex
          sudo df -h
          npm cache clean --force
          yarn cache clean
          pip cache purge
          docker system prune -a -f
          sudo apt-get remove -y --fix-missing \
              'php.*' \
              '^aspnetcore-.*' \
              '^dotnet-.*' \
              '^llvm-.*' \
              '^mongodb-.*' \
              '^mysql-.*' \
              google-chrome-stable \
              microsoft-edge-stable \
              firefox \
              powershell \
              mono-devel \
              azure-cli \
              google-cloud-sdk \
              google-cloud-cli \
              libgl1-mesa-dri \
              snapd \
              1>/dev/null \
              2>&1
          sudo apt-get autoremove --purge -y
          sudo apt-get clean
          rm -rf ~/.cache
          sudo rm -rf /root/.cache
          sudo rm -rf /root/.sbt
          sudo rm -rf /tmp/*
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/lib/google-cloud-sdk
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/lib/node_modules
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /opt/az
          sudo rm -rf /opt/microsoft
          sudo rm -rf /opt/google

      - name: Show space
        shell: bash
        run: |
          set -x
          sudo df -h
          docker images -a

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Not allowed to use secrets in `if` condition
      - name: Check tokens
        id: check-tokens
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
          HW_USERNAME: ${{ secrets.HW_USERNAME }}
          HW_TOKEN: ${{ secrets.HW_TOKEN }}
        run: |
          if [ -n "$DOCKERHUB_USERNAME" ] && [ -n "$DOCKERHUB_TOKEN" ]; then
            echo "dockerhub=true" >> $GITHUB_OUTPUT
          elif [ -n "$QUAY_USERNAME" ] && [ -n "$QUAY_TOKEN" ]; then
            echo "quay=true" >> $GITHUB_OUTPUT
          elif [ -n "$HW_USERNAME" ] && [ -n "$HW_TOKEN" ]; then
            echo "hw=true" >> $GITHUB_OUTPUT
          fi

      - name: Login to Docker Hub
        if: ${{ inputs.push && steps.check-tokens.outputs.dockerhub == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container
        if: ${{ inputs.push }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Login to RedHat Quay
        if: ${{ inputs.push && steps.check-tokens.outputs.quay == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to Huawei Cloud
        if: ${{ inputs.push && steps.check-tokens.outputs.hw == 'true' && inputs.hw-registry }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.hw-registry }}
          username: ${{ secrets.HW_USERNAME }}
          password: ${{ secrets.HW_TOKEN }}

      - name: Extract metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          bake-target: "docker-metadata-action"

      - name: Build and push Docker image
        id: bake
        uses: docker/bake-action@v5
        with:
          files: |
            ${{ github.workspace }}/docker-bake.hcl
            ${{ steps.metadata.outputs.bake-file-labels }}
            ${{ steps.metadata.outputs.bake-file-annotations }}
          push: ${{ inputs.push }}
          targets: ${{ matrix.target }}
          provenance: false
          sbom: false
          set: ${{ inputs.set }}

      - name: Export metadata
        id: export
        if: ${{ steps.bake.outputs.metadata }}
        shell: bash
        run: |
          METADATA_FILE_NAME="${{ matrix.target }}-metadata.json"
          echo "metadata_file_name=${METADATA_FILE_NAME}" >> $GITHUB_OUTPUT
          echo '${{ steps.bake.outputs.metadata }}' > /tmp/${METADATA_FILE_NAME}

      - name: Upload metadata
        id: upload-artifact
        if: ${{ inputs.upload-metadata }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.export.outputs.metadata_file_name }}
          path: /tmp/${{ steps.export.outputs.metadata_file_name }}
          if-no-files-found: error
          retention-days: 7

      - name: Show space
        if: ${{ always() }}
        shell: bash
        run: |
          set -x
          sudo df -h
          docker images -a
