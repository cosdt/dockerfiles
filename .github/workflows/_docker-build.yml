name: 'Build and push Docker images'

on:
  workflow_call:
    inputs:
      target:
        description: "Bake target"
        required: true
        type: string
      set:
        description: "List of targets values to override (eg. targetpattern.key=value)"
        required: false
        type: string
      push:
        description: "Push is a shorthand for --set=*.output=type=registry"
        required: false
        type: boolean
        default: false
      clean-up:
        description: "Whether to clean up"
        required: false
        type: boolean
        default: true
      upload-metadata:
        description: "Whether to upload metadata files"
        required: false
        type: boolean
        default: true
      hw-registry:
        description: "Server address of Huawei Cloud registry"
        required: false
        type: string
        default: 'swr.cn-southwest-2.myhuaweicloud.com'
    secrets:
      DOCKERHUB_OWNER:
        description: "Owner of the DockerHub registry"
        required: false
      DOCKERHUB_USERNAME:
        description: "Username of the DockerHub registry"
        required: false
      DOCKERHUB_TOKEN:
        description: "Token of the DockerHub registry"
        required: false
      QUAY_OWNER:
        description: "Owner of the Quay registry"
        required: false
      QUAY_USERNAME:
        description: "Username of the Quay registry"
        required: false
      QUAY_TOKEN:
        description: "Token of the Quay registry"
        required: false
      HW_OWNER:
        description: "Owner of the Huawei Cloud registry"
        required: false
      HW_USERNAME:
        description: "Username of the Huawei Cloud registry"
        required: false
      HW_TOKEN:
        description: "Token of the Huawei Cloud registry"
        required: false

env:
  # Registries to push the images to, see the variable definition in docker-bake.hcl
  registries: |
    [
      {
        "url": "docker.io",
        "owner": "${{ secrets.DOCKERHUB_OWNER }}"
      },
      {
        "url": "ghcr.io",
        "owner": "${{ github.repository_owner }}"
      },
      {
        "url": "quay.io",
        "owner": "${{ secrets.QUAY_OWNER }}"
      }
    ]

jobs:
  prepare:
    name: 'prepare'
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.list-target.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List targets
        id: list-target
        uses: docker/bake-action/subaction/list-targets@v4
        with:
          target: ${{ inputs.target }}

  docker:
    name: 'docker'
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    steps:
      - name: Clean up
        if: ${{ inputs.clean-up }}
        continue-on-error: true
        shell: bash
        run: |
          set -ex
          sudo df -h
          npm cache clean --force
          yarn cache clean
          pip cache purge
          docker system prune -a -f
          sudo apt-get remove -y --fix-missing \
              'php.*' \
              '^aspnetcore-.*' \
              '^dotnet-.*' \
              '^llvm-.*' \
              '^mongodb-.*' \
              '^mysql-.*' \
              google-chrome-stable \
              microsoft-edge-stable \
              firefox \
              powershell \
              mono-devel \
              azure-cli \
              google-cloud-sdk \
              google-cloud-cli \
              libgl1-mesa-dri \
              snapd \
              1>/dev/null \
              2>&1
          sudo apt-get autoremove --purge -y
          sudo apt-get clean
          rm -rf ~/.cache
          sudo rm -rf /root/.cache
          sudo rm -rf /root/.sbt
          sudo rm -rf /tmp/*
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/lib/google-cloud-sdk
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/lib/node_modules
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /opt/az
          sudo rm -rf /opt/microsoft
          sudo rm -rf /opt/google

      - name: Show space
        shell: bash
        run: |
          set -x
          sudo df -h
          docker images -a

      - name: Show space
        shell: bash
        run: |
          set -x
          sudo du -h -d 2 /root | sort -hr
          sudo du -h -d 2 /usr | sort -hr
          sudo du -h -d 2 /opt | sort -hr
