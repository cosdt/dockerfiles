name: 'Init Docker Environment'
description: 'Init Docker Environment'
inputs:
  target:
    required: true
  dockerhub_owner:
    required: false
  dockerhub_username:
    required: false
  dockerhub_token:
    required: false
  quay_owner:
    required: false
  quay_username:
    required: false
  quay_token:
    required: false
  hw_owner:
    required: false
  hw_username:
    required: false
  hw_token:
    required: false
runs:
  using: 'composite'
  steps:
    - name: Clean up
      continue-on-error: true
      shell: bash
      run: |
        sudo df -h
        npm cache clean --force
        yarn cache clean
        pip cache purge
        docker system prune -a -f
        rm -rf ~/.cache
        sudo rm -rf /root/.cache
        sudo rm -rf /root/.sbt
        sudo rm -rf /tmp/*
        sudo rm -rf /usr/local/.ghcup
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/local/share/chromium
        sudo rm -rf /usr/share/swift
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/hostedtoolcache
        sudo rm -rf /opt/az
        sudo rm -rf /opt/microsoft
        sudo rm -rf /opt/google

    - name: Show space
      shell: bash
      run: |
        sudo df -h

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: ${{ github.event_name != 'pull_request' && inputs.dockerhub_username && inputs.dockerhub_token }}
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}

    - name: Login to GitHub Container
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}

    - name: Login to RedHat Quay
      if: ${{ github.event_name != 'pull_request' && inputs.quay_username && inputs.quay_token }}
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ inputs.quay_username }}
        password: ${{ inputs.quay_token }}

    - name: Login to Huawei Cloud
      if: ${{ github.event_name != 'pull_request' && inputs.hw_username && inputs.hw_token }}
      uses: docker/login-action@v3
      with:
        registry: swr.cn-southwest-2.myhuaweicloud.com
        username: ${{ inputs.hw_username }}
        password: ${{ inputs.hw_token }}

    - name: Extract metadata for Docker
      id: metadata
      uses: docker/metadata-action@v5
      with:
        bake-target: "docker-metadata-action"

    - name: Build and push Docker image
      id: bake
      uses: docker/bake-action@v5
      with:
        files: |
          ${{ github.workspace }}/docker-bake.hcl
          ${{ steps.metadata.outputs.bake-file-labels }}
          ${{ steps.metadata.outputs.bake-file-annotations }}
        push: ${{ github.event_name != 'pull_request' }}
        targets: ${{ inputs.target }}
        provenance: false
        sbom: false
        set: |
          *.cache-from=
          *.cache-to=

    - name: Export metadata
      id: export
      if: ${{ steps.bake.outputs.metadata }}
      shell: bash
      run: |
        METADATA_FILE_NAME="${{ inputs.target }}-metadata.json"
        echo "metadata_file_name=${METADATA_FILE_NAME}" >> $GITHUB_OUTPUT
        echo '${{ steps.bake.outputs.metadata }}' > /tmp/${METADATA_FILE_NAME}

    - name: Upload metadata
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.export.outputs.metadata_file_name }}
        path: /tmp/${{ steps.export.outputs.metadata_file_name }}
        if-no-files-found: error
        retention-days: 7

    - name: Show space
      if: ${{ always() }}
      shell: bash
      run: |
        sudo df -h
        docker images -a
