FROM openeuler/openeuler:22.03

USER root

RUN sed -i 's|^metalink=https://mirrors.openeuler.org/metalink?repo=\$releasever/update&arch=source$|#&|' /etc/yum.repos.d/openEuler.repo && \
    sed -i 's|^metalink=https://mirrors.openeuler.org/metalink?repo=\$releasever/update&arch=\$basearch|#metalink=https://mirrors.openeuler.org/metalink?repo=\$releasever/update&arch=\$basearch|' /etc/yum.repos.d/openEuler.repo

RUN dnf -y update --repo OS --repo update && yum install -y \
    wget \
    gcc \
    gcc-c++ \
    make \
    cmake \
    unzip \
    zlib-devel \
    libffi-devel \
    openssl-devel \
    pciutils \
    net-tools \
    sqlite-devel \
    lapack-devel \
    gcc-gfortran \
    findutils \
    procps

# default container user
ENV USER=space
ENV WORKDIR=/home/${USER}

# cann need uid must be 1000
ENV UID=1000
RUN useradd -d ${WORKDIR} -u ${UID} -m ${USER} -g ${UID} -s /sbin/nologin && \
    echo 'set +o history' >> /root/.bashrc && \
    sed -i 's/^PASS_MAX_DAYS.*/PASS_MAX_DAYS   90/' /etc/login.defs

USER ${USER}
WORKDIR ${WORKDIR}

# Install Python
ENV MINICONDA_FILE=Miniconda3-latest-Linux-aarch64.sh
ENV MINICONDA_URL=https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh
ENV PYTHON_NAME=base_space
RUN wget -O ${MINICONDA_FILE} ${MINICONDA_URL} && \
    chmod +x ${MINICONDA_FILE} && \
    bash ${MINICONDA_FILE} -b -p ${WORKDIR}/miniconda
ENV PYTHON_VERSION=3.8
RUN ${WORKDIR}/miniconda/bin/conda init bash && \
    ${WORKDIR}/miniconda/bin/conda create --name ${PYTHON_NAME} -y python=${PYTHON_VERSION} && \
    echo "conda activate ${PYTHON_NAME}" >> ~/.bashrc && \
    . ~/.bashrc && \
    rm -f ${MINICONDA_FILE}
ENV PATH=${WORKDIR}/miniconda/envs/${PYTHON_NAME}/bin/:${WORKDIR}/miniconda/bin/:${PATH}

# Install Python Packages
ENV PIP_SOURCE_URL=https://pypi.tuna.tsinghua.edu.cn/simple
RUN pip install pip --no-cache-dir --upgrade -i ${PIP_SOURCE_URL} && \
    pip install --no-cache-dir attrs cython numpy decorator sympy cffi pyyaml pathlib2 psutil protobuf scipy requests absl-py -i ${PIP_SOURCE_URL} && \
    pip install --no-cache-dir wheel pyyaml typing_extensions expecttest -i ${PIP_SOURCE_URL}

# Install CANN toolkit
ENV CANN_TOOLKIT_VERSION=8.0.RC1_linux
ENV CANN_TOOLKIT_URL=https://ascend-repo.obs.cn-east-2.myhuaweicloud.com/CANN/CANN%208.0.RC1/Ascend-cann-toolkit_8.0.RC1_linux-aarch64.run?response-content-type=application/octet-stream
ENV CANN_TOOLKIT_FILE=Ascend-cann-toolkit_${CANN_TOOLKIT_VERSION}.run
ENV LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/common/:/usr/local/Ascend/driver/lib64/driver/:${LD_LIBRARY_PATH}

RUN wget -O ${CANN_TOOLKIT_FILE} ${CANN_TOOLKIT_URL} && \
    chmod +x ${CANN_TOOLKIT_FILE} && \
    sh -c  '/bin/echo -e "Y" | ./${CANN_TOOLKIT_FILE} --install' && \
    rm -f ${CANN_TOOLKIT_FILE}

RUN echo "source ${WORKDIR}/Ascend/ascend-toolkit/set_env.sh" >> "${WORKDIR}/.bashrc"

# map host machine dirver library to container
ENV LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/common/:/usr/local/Ascend/driver/lib64/driver/:$LD_LIBRARY_PATH

# Install CANNN Kernels
ENV CANN_KERNEL_VERSION=910b_8.0.RC1_linux-aarch64
ENV CANN_KERNEL_URL=https://ascend-repo.obs.cn-east-2.myhuaweicloud.com/CANN/CANN%208.0.RC1/Ascend-cann-kernels-910b_8.0.RC1_linux.run?response-content-type=application/octet-stream
ENV CANN_KERNEL_FILE=Ascend-cann-kernels-${CANN_KERNEL_VERSION}.run

RUN wget -O ${CANN_KERNEL_FILE} ${CANN_KERNEL_URL} && \
    chmod +x ${CANN_KERNEL_FILE} && \
    sh -c  '/bin/echo -e "Y" | ./${CANN_KERNEL_FILE} --install' && \
    rm -f ${CANN_KERNEL_FILE}

# Install openMind
ENV OPENMIND_VERSION=0.0.1
ENV OPENMIND_URL=https://space-server-npu.obs.cn-southwest-2.myhuaweicloud.com/openmind/openmind-0.0.1-py3-none-any.whl

ENV OPENMIND_FILE=openmind-${OPENMIND_VERSION}-py3-none-any.whl
RUN wget -O ${OPENMIND_FILE} ${OPENMIND_URL} && \
    chmod +x ${OPENMIND_FILE} && \
    pip install --no-cache-dir ${OPENMIND_FILE} -i ${PIP_SOURCE_URL} && \
    pip install --no-cache-dir openmind[hf-cpu] -i ${PIP_SOURCE_URL} && \
    rm -f ${OPENMIND_FILE}

# Install openMind Hub
ENV OPENMIND_HUB_VERSION=0.0.1
ENV OPENMIND_HUB_URL=https://space-server-npu.obs.cn-southwest-2.myhuaweicloud.com/openmind/openmind_hub-0.0.1-py3-none-any.whl

ENV OPENMIND_HUB_FILE=openmind_hub-${OPENMIND_HUB_VERSION}-py3-none-any.whl
RUN wget -O ${OPENMIND_HUB_FILE} ${OPENMIND_HUB_URL} && \
    chmod +x ${OPENMIND_HUB_FILE} && \
    pip install --no-cache-dir ${OPENMIND_HUB_FILE} -i ${PIP_SOURCE_URL} && \
    rm -f ${OPENMIND_HUB_FILE}

# Install Mindspore
RUN pip install  --no-cache-dir mindspore==2.3.0rc1 mindpet==1.0.2 -i ${PIP_SOURCE_URL}

# Install Mindformers
RUN pip install --no-cache-dir mindformers==1.1.0rc1 -i ${PIP_SOURCE_URL}

# Install Torch
ENV PIP_SOURCE_URL=https://pypi.tuna.tsinghua.edu.cn/simple
RUN pip install pip --no-cache-dir --upgrade -i ${PIP_SOURCE_URL} && \
    pip install --no-cache-dir torch==2.1.0 torchvision==0.16.0 torchaudio==2.1.0 --extra-index-url https://download.pytorch.org/whl/cpu --index-url ${PIP_SOURCE_URL}
    
# Install Torch NPU
ENV TORCH_NPU_VERSION=2.1.0.post3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64
ENV TORCH_NPU_URL=https://gitee.com/ascend/pytorch/releases/download/v6.0.rc1-pytorch2.1.0/torch_npu-2.1.0.post3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl

ENV TORCH_NPU_FILE=torch_npu-${TORCH_NPU_VERSION}.whl
RUN wget -O ${TORCH_NPU_FILE} ${TORCH_NPU_URL} && \
    chmod +x ${TORCH_NPU_FILE} && \
    pip install --no-cache-dir ${TORCH_NPU_FILE} -i ${PIP_SOURCE_URL} && \
    rm -f ${TORCH_NPU_FILE}

# Install gradio
ENV PIP_SOURCE_URL=https://pypi.tuna.tsinghua.edu.cn/simple
RUN pip install pip --no-cache-dir --upgrade -i ${PIP_SOURCE_URL} && \
    pip install --no-cache-dir gradio==4.26.0 -i ${PIP_SOURCE_URL}gradio
